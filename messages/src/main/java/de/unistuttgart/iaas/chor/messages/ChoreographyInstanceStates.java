//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.08 at 10:45:27 PM MEZ 
//


package de.unistuttgart.iaas.chor.messages;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ChoreographyInstanceStates.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ChoreographyInstanceStates">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ChoreographyInstance_Initializing"/>
 *     &lt;enumeration value="ChoreographyInstance_Running"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Completed"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Completed_and_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Completed_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Faulted_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Running_with_Completed_and_Faulted_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Completed"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Completed_and_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Completed_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Faulted_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Suspended_with_Completed_and_Faulted_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Completed"/>
 *     &lt;enumeration value="ChoreographyInstance_Completed_with_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Completed_with_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Faulted_with_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Completed_with_Faulted_and_Terminated"/>
 *     &lt;enumeration value="ChoreographyInstance_Faulted"/>
 *     &lt;enumeration value="ChoreographyInstance_Terminated"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ChoreographyInstanceStates", namespace = "http://www.example.org/choreography_instance_states")
@XmlEnum
public enum ChoreographyInstanceStates {

    @XmlEnumValue("ChoreographyInstance_Initializing")
    CHOREOGRAPHY_INSTANCE_INITIALIZING("ChoreographyInstance_Initializing"),
    @XmlEnumValue("ChoreographyInstance_Running")
    CHOREOGRAPHY_INSTANCE_RUNNING("ChoreographyInstance_Running"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Completed")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_COMPLETED("ChoreographyInstance_Running_with_Completed"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Faulted")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_FAULTED("ChoreographyInstance_Running_with_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Terminated")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_TERMINATED("ChoreographyInstance_Running_with_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Completed_and_Faulted")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_COMPLETED_AND_FAULTED("ChoreographyInstance_Running_with_Completed_and_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Completed_and_Terminated")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_COMPLETED_AND_TERMINATED("ChoreographyInstance_Running_with_Completed_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Faulted_and_Terminated")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_FAULTED_AND_TERMINATED("ChoreographyInstance_Running_with_Faulted_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Running_with_Completed_and_Faulted_and_Terminated")
    CHOREOGRAPHY_INSTANCE_RUNNING_WITH_COMPLETED_AND_FAULTED_AND_TERMINATED("ChoreographyInstance_Running_with_Completed_and_Faulted_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Suspended")
    CHOREOGRAPHY_INSTANCE_SUSPENDED("ChoreographyInstance_Suspended"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Completed")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_COMPLETED("ChoreographyInstance_Suspended_with_Completed"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Faulted")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_FAULTED("ChoreographyInstance_Suspended_with_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Terminated")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_TERMINATED("ChoreographyInstance_Suspended_with_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Completed_and_Faulted")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_COMPLETED_AND_FAULTED("ChoreographyInstance_Suspended_with_Completed_and_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Completed_and_Terminated")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_COMPLETED_AND_TERMINATED("ChoreographyInstance_Suspended_with_Completed_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Faulted_and_Terminated")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_FAULTED_AND_TERMINATED("ChoreographyInstance_Suspended_with_Faulted_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Suspended_with_Completed_and_Faulted_and_Terminated")
    CHOREOGRAPHY_INSTANCE_SUSPENDED_WITH_COMPLETED_AND_FAULTED_AND_TERMINATED("ChoreographyInstance_Suspended_with_Completed_and_Faulted_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Completed")
    CHOREOGRAPHY_INSTANCE_COMPLETED("ChoreographyInstance_Completed"),
    @XmlEnumValue("ChoreographyInstance_Completed_with_Faulted")
    CHOREOGRAPHY_INSTANCE_COMPLETED_WITH_FAULTED("ChoreographyInstance_Completed_with_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Completed_with_Terminated")
    CHOREOGRAPHY_INSTANCE_COMPLETED_WITH_TERMINATED("ChoreographyInstance_Completed_with_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Faulted_with_Terminated")
    CHOREOGRAPHY_INSTANCE_FAULTED_WITH_TERMINATED("ChoreographyInstance_Faulted_with_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Completed_with_Faulted_and_Terminated")
    CHOREOGRAPHY_INSTANCE_COMPLETED_WITH_FAULTED_AND_TERMINATED("ChoreographyInstance_Completed_with_Faulted_and_Terminated"),
    @XmlEnumValue("ChoreographyInstance_Faulted")
    CHOREOGRAPHY_INSTANCE_FAULTED("ChoreographyInstance_Faulted"),
    @XmlEnumValue("ChoreographyInstance_Terminated")
    CHOREOGRAPHY_INSTANCE_TERMINATED("ChoreographyInstance_Terminated");
    private final String value;

    ChoreographyInstanceStates(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ChoreographyInstanceStates fromValue(String v) {
        for (ChoreographyInstanceStates c: ChoreographyInstanceStates.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
